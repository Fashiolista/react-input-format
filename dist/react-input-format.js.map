{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-input-format.js","webpack:///webpack/bootstrap dc7c251dd1eefdf62e68","webpack:///./react-input-format.js","webpack:///./formatters/percentage.js","webpack:///./formatters/thousand-separated.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","o","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1__formatters_thousand_separated__","__WEBPACK_IMPORTED_MODULE_2__formatters_percentage__","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","ReactInputFormat","_React$Component","_this","getPrototypeOf","state","assign","type","format","String","defaultValue","formattedValue","_objEqual","formatterProps","setState","setFormatter","objA","objB","JSON","stringify","availableFormatters","formatters","thousand-separated","percentage","formatterArg","arguments","undefined","formatter","console","warn","e","deFormat","getProps","onChange","changeEvent","originalEvent","refreshFormattedValue","keyCode","a","createElement","className","bind","onBlur","onKeyDown","Component","propTypes","PropTypes","string","isRequired","number","func","__REACT_HOT_LOADER__","register","_default","formatOnBlur","input","parseFloat","isNaN","factorDiv","toFixed","decimals","parts","deFormatParts","determineDecimals","factorMulti","parseInt","match","replace","split","Math","min","factor","join"],"mappings":"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","file":"react-input-format.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-input-format\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-input-format\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-input-format\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-input-format\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__formatters_thousand_separated__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__formatters_percentage__ = __webpack_require__(1);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n/**\n * React Input Format Component\n *\n * Takes a normal input box and formats the user's input based on the specified formatter.\n *\n * Currently supports:\n *\n * - Thousand Separator\n *   >> 10000\n *   << 10,000\n *\n *   >> 10000000.00\n *   << 10,000,000.00\n *\n * - Percentage\n *   >> 1\n *   << 1%\n *\n *   With 0.01 factor, value returned by onChange is 0.042\n *   >> 4.2\n *   << 4.2%\n *\n *\n * @type {ReactInputFormat}\n */\n\nvar ReactInputFormat = function (_React$Component) {\n    _inherits(ReactInputFormat, _React$Component);\n\n    /**\n     * Constructor\n     *\n     * @param props\n     */\n    function ReactInputFormat(props) {\n        _classCallCheck(this, ReactInputFormat);\n\n        var _this = _possibleConstructorReturn(this, (ReactInputFormat.__proto__ || Object.getPrototypeOf(ReactInputFormat)).call(this));\n\n        _this.state = Object.assign({\n            type: 'text',\n            format: 'thousand-separated',\n            value: String(props.defaultValue) || '',\n            formattedValue: ''\n        }, props);\n        return _this;\n    }\n\n    /**\n     * Called when receiving new props\n     * Updates state and called for new formatter (or formatter props) if\n     * needed\n     *\n     * @param  {Object} props\n     * @return {Boolean|Void}\n     */\n\n\n    _createClass(ReactInputFormat, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(props) {\n            if (this.state.format === props.format && this._objEqual(this.state.formatterProps, props.formatterProps)) {\n                return;\n            }\n\n            this.setState({\n                format: props.format,\n                formatterProps: props.formatterProps\n            });\n\n            this.setFormatter(props.format);\n        }\n\n        /**\n         * Checks if objects are identical\n         *\n         * @param  {Object} objA\n         * @param  {Object} objB\n         * @return {Boolean}\n         */\n\n    }, {\n        key: '_objEqual',\n        value: function _objEqual(objA, objB) {\n            return JSON.stringify(objA) === JSON.stringify(objB);\n        }\n\n        /**\n         * React component mounted\n         */\n\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.availableFormatters();\n            this.setFormatter();\n        }\n\n        /**\n         * Set available formatters\n         */\n\n    }, {\n        key: 'availableFormatters',\n        value: function availableFormatters() {\n            this.formatters = {\n                'thousand-separated': __WEBPACK_IMPORTED_MODULE_1__formatters_thousand_separated__[\"a\" /* default */],\n                'percentage': __WEBPACK_IMPORTED_MODULE_2__formatters_percentage__[\"a\" /* default */]\n            };\n        }\n\n        /**\n         * Set formatter, based on user props\n         */\n\n    }, {\n        key: 'setFormatter',\n        value: function setFormatter() {\n            var formatterArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            var formatter = formatterArg ? formatterArg : this.state.format;\n\n            if (!this.formatters[formatter]) {\n                return console.warn('Formatter \"' + formatter + '\" not found');\n            }\n\n            this.formatter = new this.formatters[formatter](this.props.formatterProps);\n\n            this.setState({\n                formattedValue: this.formatter.format(this.state.value)\n            });\n        }\n\n        /**\n         * On change callback\n         *\n         * @param e\n         */\n\n    }, {\n        key: 'onChange',\n        value: function onChange(e) {\n            this.state.value = this.formatter.deFormat(e.target.value);\n\n            if (!this.formatter.getProps()['formatOnBlur']) {\n                this.state.formattedValue = this.formatter.format(this.state.value);\n            } else {\n                this.state.formattedValue = e.target.value;\n            }\n\n            this.setState(this.state);\n\n            this.props.onChange && this.props.onChange(this.changeEvent(e));\n        }\n\n        /**\n         * Make our own change event\n         *\n         * @param e\n         * @returns {{value: *, originalEvent: *}}\n         */\n\n    }, {\n        key: 'changeEvent',\n        value: function changeEvent(e) {\n            return {\n                value: this.state.value,\n                originalEvent: e\n            };\n        }\n\n        /**\n         * On blur, might want to reformat\n         */\n\n    }, {\n        key: 'onBlur',\n        value: function onBlur() {\n            if (this.formatter.getProps()['formatOnBlur']) {\n                this.refreshFormattedValue();\n            }\n        }\n\n        /**\n         * On enter, reformat\n         * @param e\n         */\n\n    }, {\n        key: 'onKeyDown',\n        value: function onKeyDown(e) {\n            if (e.keyCode === 13) {\n                this.refreshFormattedValue();\n            }\n        }\n\n        /**\n         * Refresh formatted value based on internal value\n         */\n\n    }, {\n        key: 'refreshFormattedValue',\n        value: function refreshFormattedValue() {\n            this.state.formattedValue = this.formatter.format(this.state.value);\n\n            this.setState(this.state);\n        }\n\n        /**\n         * Render\n         *\n         * @returns {XML}\n         */\n\n    }, {\n        key: 'render',\n        value: function render() {\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                'div',\n                { className: 'react-input-format' },\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: this.state.type, value: this.state.formattedValue, onChange: this.onChange.bind(this), onBlur: this.onBlur.bind(this), onKeyDown: this.onKeyDown.bind(this) })\n            );\n        }\n    }]);\n\n    return ReactInputFormat;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\n;\n\n// format=\"percentage\" defaultValue={0} formatterProps={{factor: 0.01, decimals: 0}} onChange={e => {console.log(\"Updated with\", e.value)}}\n\n/**\n * Proptypes\n */\nReactInputFormat.propTypes = {\n    format: __WEBPACK_IMPORTED_MODULE_0_react___default.a.PropTypes.string.isRequired,\n    defaultValue: __WEBPACK_IMPORTED_MODULE_0_react___default.a.PropTypes.number,\n    formatterProps: __WEBPACK_IMPORTED_MODULE_0_react___default.a.PropTypes.object,\n    onChange: __WEBPACK_IMPORTED_MODULE_0_react___default.a.PropTypes.func\n};\n\nmodule.exports = ReactInputFormat;\n;\n\n(function () {\n    if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n        return;\n    }\n\n    __REACT_HOT_LOADER__.register(ReactInputFormat, 'ReactInputFormat', '/Users/jimmy/Websites/react-input-format/src/react-input-format.js');\n})();\n\n;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _default = function () {\n\n    /**\n     * Constructor\n     *\n     * @param props\n     */\n    function _default() {\n        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, _default);\n\n        this.props = props;\n    }\n\n    /**\n     * Return properties specific for this formatter\n     *\n     * @returns {{formatOnBlur: boolean}}\n     */\n\n\n    _createClass(_default, [{\n        key: 'getProps',\n        value: function getProps() {\n            return {\n                formatOnBlur: true\n            };\n        }\n\n        /**\n         * Format string\n         *\n         * @param input\n         * @returns {string}\n         */\n\n    }, {\n        key: 'format',\n        value: function format() {\n            var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n            input = parseFloat(input || 0);\n\n            if (isNaN(input)) {\n                return '%';\n            }\n\n            return this.factorDiv(input).toFixed(this.props.decimals) + \"%\";\n        }\n\n        /**\n         * Deformat formatted text back to computer readable\n         *\n         * @param input\n         * @returns {string}\n         */\n\n    }, {\n        key: 'deFormat',\n        value: function deFormat() {\n            var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n            var parts = this.deFormatParts(input);\n\n            if (parts && parts[0] === '%') {\n                return '';\n            }\n\n            this.determineDecimals(input);\n\n            if (parts) {\n                return parseFloat(this.factorMulti(parts[0]).toFixed(2 + parseInt(this.props.decimals)));\n            } else {\n                return '';\n            }\n        }\n\n        /**\n         * Use regex to divide input into parts\n         *\n         * @param input\n         * @returns {Array|{index: number, input: string}|*}\n         */\n\n    }, {\n        key: 'deFormatParts',\n        value: function deFormatParts(input) {\n            var format = /^([0-9]*\\.?\\d{0,2})%?/g;\n\n            return input.match(format);\n        }\n\n        /**\n         * Based on input, see if the user is using a decimal number, if so, we update our decimal property\n         * for readability\n         *\n         * @param input\n         */\n\n    }, {\n        key: 'determineDecimals',\n        value: function determineDecimals() {\n            var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n            var parts = input.replace('%', '').split('.');\n\n            if (parts[1]) {\n                this.props.decimals = Math.min(parts[1].length, 2);\n            } else {\n                this.props.decimals = 0;\n            }\n        }\n\n        /**\n         * Calc the user's given factor\n         *\n         * @param input\n         * @returns {number}\n         */\n\n    }, {\n        key: 'factorMulti',\n        value: function factorMulti(input) {\n            return parseFloat(input) * parseFloat(this.props.factor || 1);\n        }\n\n        /**\n         * Calc the user's given factor\n         *\n         * @param input\n         * @returns {number}\n         */\n\n    }, {\n        key: 'factorDiv',\n        value: function factorDiv(input) {\n            return parseFloat(input) / parseFloat(this.props.factor || 1);\n        }\n    }]);\n\n    return _default;\n}();\n\n/**\n * Thousand separated formatter\n */\n/* harmony default export */ exports[\"a\"] = _default;\n;\n\n(function () {\n    if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n        return;\n    }\n\n    __REACT_HOT_LOADER__.register(_default, 'default', '/Users/jimmy/Websites/react-input-format/src/formatters/percentage.js');\n})();\n\n;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _default = function () {\n\n    /**\n     * Constructor\n     *\n     * @param props\n     */\n    function _default(props) {\n        _classCallCheck(this, _default);\n\n        this.props = props;\n    }\n\n    /**\n     * Return properties specific for this formatter\n     *\n     * @returns {}\n     */\n\n\n    _createClass(_default, [{\n        key: 'getProps',\n        value: function getProps() {\n            return {};\n        }\n\n        /**\n         * Format string\n         *\n         * @param input\n         * @returns {string}\n         */\n\n    }, {\n        key: 'format',\n        value: function format() {\n            var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n            var parts = String(input).split('.');\n            parts[0] = parts[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, ',');\n\n            return parts.join('.');\n        }\n\n        /**\n         * Deformat formatted text back to computer readable\n         *\n         * @param input\n         * @returns {string}\n         */\n\n    }, {\n        key: 'deFormat',\n        value: function deFormat() {\n            var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n            var format = /(^([0-9]|,)+(\\.?[0-9]{0,2})?)/g,\n                parts = input.match(format);\n\n            return (parts && parts.join('') || '').replace(/,/g, '');\n        }\n    }]);\n\n    return _default;\n}();\n\n/**\n * Thousand separated formatter\n */\n/* harmony default export */ exports[\"a\"] = _default;\n;\n\n(function () {\n    if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n        return;\n    }\n\n    __REACT_HOT_LOADER__.register(_default, 'default', '/Users/jimmy/Websites/react-input-format/src/formatters/thousand-separated.js');\n})();\n\n;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// react-input-format.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dc7c251dd1eefdf62e68","import React from 'react';\n\nimport ThousandSeparatedFilter from './formatters/thousand-separated';\nimport PercentageFilter from './formatters/percentage';\n\n\n/**\n * React Input Format Component\n *\n * Takes a normal input box and formats the user's input based on the specified formatter.\n *\n * Currently supports:\n *\n * - Thousand Separator\n *   >> 10000\n *   << 10,000\n *\n *   >> 10000000.00\n *   << 10,000,000.00\n *\n * - Percentage\n *   >> 1\n *   << 1%\n *\n *   With 0.01 factor, value returned by onChange is 0.042\n *   >> 4.2\n *   << 4.2%\n *\n *\n * @type {ReactInputFormat}\n */\nclass ReactInputFormat extends React.Component {\n\n    /**\n     * Constructor\n     *\n     * @param props\n     */\n    constructor (props) {\n        super();\n\n        this.state = Object.assign({\n            type: 'text',\n            format: 'thousand-separated',\n            value: String(props.defaultValue) || '',\n            formattedValue: '',\n        }, props);\n    }\n\n\n    /**\n     * Called when receiving new props\n     * Updates state and called for new formatter (or formatter props) if\n     * needed\n     *\n     * @param  {Object} props\n     * @return {Boolean|Void}\n     */\n    componentWillReceiveProps (props) {\n        if (this.state.format === props.format\n            && this._objEqual(this.state.formatterProps, props.formatterProps)) {\n            return;\n        }\n\n        this.setState({\n            format: props.format,\n            formatterProps: props.formatterProps\n        });\n\n        this.setFormatter(props.format);\n    }\n\n\n    /**\n     * Checks if objects are identical\n     *\n     * @param  {Object} objA\n     * @param  {Object} objB\n     * @return {Boolean}\n     */\n    _objEqual (objA, objB) {\n        return JSON.stringify(objA) === JSON.stringify(objB);\n    }\n\n    /**\n     * React component mounted\n     */\n    componentDidMount () {\n        this.availableFormatters();\n        this.setFormatter();\n    }\n\n    /**\n     * Set available formatters\n     */\n    availableFormatters () {\n        this.formatters = {\n            'thousand-separated': ThousandSeparatedFilter,\n            'percentage': PercentageFilter,\n        }\n    }\n\n    /**\n     * Set formatter, based on user props\n     */\n    setFormatter (formatterArg = false) {\n        const formatter = formatterArg ? formatterArg : this.state.format;\n\n        if (!this.formatters[formatter]) {\n            return console.warn(`Formatter \"${formatter}\" not found`);\n        }\n\n        this.formatter = new this.formatters[formatter](this.props.formatterProps);\n\n        this.setState({\n            formattedValue: this.formatter.format(this.state.value)\n        });\n    }\n\n    /**\n     * On change callback\n     *\n     * @param e\n     */\n    onChange (e) {\n        this.state.value = this.formatter.deFormat(e.target.value);\n\n        if (!this.formatter.getProps()['formatOnBlur']) {\n            this.state.formattedValue = this.formatter.format(this.state.value);\n        } else {\n            this.state.formattedValue = e.target.value;\n        }\n\n        this.setState(this.state);\n\n        this.props.onChange && this.props.onChange(this.changeEvent(e));\n    }\n\n    /**\n     * Make our own change event\n     *\n     * @param e\n     * @returns {{value: *, originalEvent: *}}\n     */\n    changeEvent (e) {\n        return {\n            value: this.state.value,\n            originalEvent: e,\n        };\n    }\n\n    /**\n     * On blur, might want to reformat\n     */\n    onBlur () {\n        if (this.formatter.getProps()['formatOnBlur']) {\n            this.refreshFormattedValue();\n        }\n    }\n\n    /**\n     * On enter, reformat\n     * @param e\n     */\n    onKeyDown (e) {\n        if (e.keyCode === 13) {\n            this.refreshFormattedValue();\n        }\n    }\n\n    /**\n     * Refresh formatted value based on internal value\n     */\n    refreshFormattedValue () {\n        this.state.formattedValue = this.formatter.format(this.state.value);\n\n        this.setState(this.state);\n    }\n\n    /**\n     * Render\n     *\n     * @returns {XML}\n     */\n    render () {\n        return (\n            <div className=\"react-input-format\">\n                <input type={this.state.type} value={this.state.formattedValue} onChange={this.onChange.bind(this)} onBlur={this.onBlur.bind(this)} onKeyDown={this.onKeyDown.bind(this)} />\n            </div>\n        );\n    }\n};\n\n// format=\"percentage\" defaultValue={0} formatterProps={{factor: 0.01, decimals: 0}} onChange={e => {console.log(\"Updated with\", e.value)}}\n\n/**\n * Proptypes\n */\nReactInputFormat.propTypes = {\n    format: React.PropTypes.string.isRequired,\n    defaultValue: React.PropTypes.number,\n    formatterProps: React.PropTypes.object,\n    onChange: React.PropTypes.func\n};\n\n\nmodule.exports = ReactInputFormat;\n\n\n\n// WEBPACK FOOTER //\n// ./react-input-format.js","/**\n * Thousand separated formatter\n */\nexport default class {\n\n    /**\n     * Constructor\n     *\n     * @param props\n     */\n    constructor (props = {}) {\n        this.props = props;\n    }\n\n    /**\n     * Return properties specific for this formatter\n     *\n     * @returns {{formatOnBlur: boolean}}\n     */\n    getProps () {\n        return {\n            formatOnBlur: true\n        }\n    }\n\n    /**\n     * Format string\n     *\n     * @param input\n     * @returns {string}\n     */\n    format (input = '') {\n        input = parseFloat(input || 0);\n\n        if (isNaN(input)) {\n            return '%';\n        }\n\n        return this.factorDiv(input).toFixed(this.props.decimals) + \"%\";\n    }\n\n    /**\n     * Deformat formatted text back to computer readable\n     *\n     * @param input\n     * @returns {string}\n     */\n    deFormat (input = '') {\n        const parts = this.deFormatParts(input);\n\n        if (parts && parts[0] === '%') {\n            return '';\n        }\n\n        this.determineDecimals(input);\n\n        if (parts) {\n            return parseFloat(\n                this.factorMulti(parts[0])\n                    .toFixed(2 + parseInt(this.props.decimals))\n            );\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Use regex to divide input into parts\n     *\n     * @param input\n     * @returns {Array|{index: number, input: string}|*}\n     */\n    deFormatParts (input) {\n        const format = /^([0-9]*\\.?\\d{0,2})%?/g;\n\n        return input.match(format);\n    }\n\n    /**\n     * Based on input, see if the user is using a decimal number, if so, we update our decimal property\n     * for readability\n     *\n     * @param input\n     */\n    determineDecimals (input = '') {\n        const parts = input.replace('%', '').split('.')\n\n        if (parts[1]) {\n            this.props.decimals = Math.min(parts[1].length, 2);\n        } else {\n            this.props.decimals = 0;\n        }\n    }\n\n    /**\n     * Calc the user's given factor\n     *\n     * @param input\n     * @returns {number}\n     */\n    factorMulti (input) {\n        return parseFloat(input) * parseFloat(this.props.factor || 1);\n    }\n\n    /**\n     * Calc the user's given factor\n     *\n     * @param input\n     * @returns {number}\n     */\n    factorDiv (input) {\n        return parseFloat(input) / parseFloat(this.props.factor || 1);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./formatters/percentage.js","/**\n * Thousand separated formatter\n */\nexport default class {\n\n    /**\n     * Constructor\n     *\n     * @param props\n     */\n    constructor (props) {\n        this.props = props;\n    }\n\n    /**\n     * Return properties specific for this formatter\n     *\n     * @returns {}\n     */\n    getProps () {\n        return {\n\n        }\n    }\n\n    /**\n     * Format string\n     *\n     * @param input\n     * @returns {string}\n     */\n    format (input = '') {\n        let parts = String(input).split('.');\n        parts[0] = parts[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, ',');\n\n        return parts.join('.');\n    }\n\n    /**\n     * Deformat formatted text back to computer readable\n     *\n     * @param input\n     * @returns {string}\n     */\n    deFormat (input = '') {\n        const format = /(^([0-9]|,)+(\\.?[0-9]{0,2})?)/g,\n            parts = input.match(format);\n\n        return (parts && parts.join('') || '').replace(/,/g, '');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./formatters/thousand-separated.js","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}